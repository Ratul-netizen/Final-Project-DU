#!/usr/bin/env python3
"""
Test script to verify vulnerability dashboard data processing
"""
import sys
import os
import json

# Add the current directory to path
if os.path.dirname(__file__) not in sys.path:
    sys.path.append(os.path.dirname(__file__))

from vulnerability_dashboard import VulnerabilityDashboard

def test_vulnerability_dashboard():
    """Test the vulnerability dashboard data processing"""
    
    print("=== Testing Vulnerability Dashboard ===")
    
    # Create dashboard instance
    dashboard = VulnerabilityDashboard()
    
    # Test data structure (similar to your scan results)
    test_data = {
        "auto_initiated": True,
        "data": {
            "scan_type": "windows_vulnerability_scan",
            "severity_breakdown": {
                "Critical": 1,
                "High": 1,
                "Medium": 7,
                "Low": 0
            },
            "status": "success",
            "system_info": "Windows 10 Pro"
        }
    }
    
    print(f"\n1. Test data structure:")
    print(json.dumps(test_data, indent=2))
    
    # Process the test data
    print(f"\n2. Processing vulnerability data...")
    result = dashboard.process_vulnerability_data("test_agent_001", test_data)
    print(f"   Processing result: {result}")
    
    # Check dashboard data
    print(f"\n3. Dashboard data after processing:")
    dashboard_data = dashboard.get_dashboard_data()
    print(f"   Dashboard data keys: {list(dashboard_data.keys())}")
    
    # Check vulnerabilities
    print(f"\n4. Vulnerabilities after processing:")
    vulnerabilities = dashboard.get_vulnerabilities()
    print(f"   Total vulnerabilities: {len(vulnerabilities)}")
    
    if vulnerabilities:
        print(f"   First vulnerability:")
        print(json.dumps(vulnerabilities[0], indent=2))
    
    # Check scans
    print(f"\n5. Scans after processing:")
    print(f"   Total scans: {len(dashboard.scans)}")
    
    if dashboard.scans:
        scan_id = list(dashboard.scans.keys())[0]
        print(f"   First scan:")
        print(json.dumps(dashboard.scans[scan_id], indent=2))
    
    # Check agents
    print(f"\n6. Agents after processing:")
    print(f"   Total agents: {len(dashboard.agents)}")
    
    if dashboard.agents:
        agent_id = list(dashboard.agents.keys())[0]
        print(f"   First agent:")
        print(json.dumps(dashboard.agents[agent_id], indent=2))
    
    # Check vulnerability stats
    print(f"\n7. Vulnerability statistics:")
    print(f"   Vulnerability stats: {dict(dashboard.vulnerability_stats)}")
    
    # Check risk scores
    print(f"\n8. Risk scores:")
    print(f"   Risk scores: {dashboard.risk_scores}")
    
    print(f"\n=== Vulnerability Dashboard Test Complete ===")

if __name__ == "__main__":
    test_vulnerability_dashboard()
